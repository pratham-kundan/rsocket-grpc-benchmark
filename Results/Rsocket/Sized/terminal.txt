# JMH version: 1.36
# VM version: JDK 17.0.7, Java HotSpot(TM) 64-Bit Server VM, 17.0.7+8-LTS-224
# VM invoker: /Users/prathamkundan/Desktop/bin/java/jdk-17.0.7.jdk/Contents/Home/bin/java
# VM options: -Dfile.encoding=UTF-8 -Duser.country=IN -Duser.language=en -Duser.variant
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 10 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.spr.JMHBenchmarks.ProtoSizedTestBench.benchmarkSizedRequestResponseT10

# Run progress: 0.00% complete, ETA 00:08:00
# Warmup Fork: 1 of 1
# Warmup Iteration   1: SLF4J: A number (39) of logging calls during the initialization phase have been intercepted and are
SLF4J: now being replayed. These are subject to the filtering rules of the underlying logging system.
SLF4J: See also http://www.slf4j.org/codes.html#replay
136.530 ops/s
Iteration   1: 150.936 ops/s
Iteration   2: 147.726 ops/s
Iteration   3: 151.360 ops/s
Iteration   4: 149.514 ops/s
Iteration   5: 155.208 ops/s

# Run progress: 12.50% complete, ETA 00:07:12
# Fork: 1 of 1
# Warmup Iteration   1: SLF4J: A number (39) of logging calls during the initialization phase have been intercepted and are
SLF4J: now being replayed. These are subject to the filtering rules of the underlying logging system.
SLF4J: See also http://www.slf4j.org/codes.html#replay
147.176 ops/s
Iteration   1: 153.897 ops/s
Iteration   2: 157.218 ops/s
Iteration   3: 158.189 ops/s
Iteration   4: 156.321 ops/s
Iteration   5: 159.071 ops/s


Result "org.spr.JMHBenchmarks.ProtoSizedTestBench.benchmarkSizedRequestResponseT10":
  156.939 ±(99.9%) 7.658 ops/s [Average]
  (min, avg, max) = (153.897, 156.939, 159.071), stdev = 1.989
  CI (99.9%): [149.281, 164.597] (assumes normal distribution)


# JMH version: 1.36
# VM version: JDK 17.0.7, Java HotSpot(TM) 64-Bit Server VM, 17.0.7+8-LTS-224
# VM invoker: /Users/prathamkundan/Desktop/bin/java/jdk-17.0.7.jdk/Contents/Home/bin/java
# VM options: -Dfile.encoding=UTF-8 -Duser.country=IN -Duser.language=en -Duser.variant
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 20 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.spr.JMHBenchmarks.ProtoSizedTestBench.benchmarkSizedRequestResponseT20

# Run progress: 25.00% complete, ETA 00:06:10
# Warmup Fork: 1 of 1
# Warmup Iteration   1: SLF4J: A number (39) of logging calls during the initialization phase have been intercepted and are
SLF4J: now being replayed. These are subject to the filtering rules of the underlying logging system.
SLF4J: See also http://www.slf4j.org/codes.html#replay
147.786 ops/s
Iteration   1: 152.104 ops/s
Iteration   2: 153.056 ops/s
Iteration   3: 151.346 ops/s
Iteration   4: 158.919 ops/s
Iteration   5: 157.451 ops/s

# Run progress: 37.50% complete, ETA 00:05:10
# Fork: 1 of 1
# Warmup Iteration   1: SLF4J: A number (39) of logging calls during the initialization phase have been intercepted and are
SLF4J: now being replayed. These are subject to the filtering rules of the underlying logging system.
SLF4J: See also http://www.slf4j.org/codes.html#replay
147.526 ops/s
Iteration   1: 154.514 ops/s
Iteration   2: 152.344 ops/s
Iteration   3: 153.000 ops/s
Iteration   4: 154.086 ops/s
Iteration   5: 154.444 ops/s


Result "org.spr.JMHBenchmarks.ProtoSizedTestBench.benchmarkSizedRequestResponseT20":
  153.678 ±(99.9%) 3.699 ops/s [Average]
  (min, avg, max) = (152.344, 153.678, 154.514), stdev = 0.961
  CI (99.9%): [149.978, 157.377] (assumes normal distribution)


# JMH version: 1.36
# VM version: JDK 17.0.7, Java HotSpot(TM) 64-Bit Server VM, 17.0.7+8-LTS-224
# VM invoker: /Users/prathamkundan/Desktop/bin/java/jdk-17.0.7.jdk/Contents/Home/bin/java
# VM options: -Dfile.encoding=UTF-8 -Duser.country=IN -Duser.language=en -Duser.variant
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 10 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.spr.JMHBenchmarks.ProtoSizedTestBench.benchmarkSizedRequestStreamT10

# Run progress: 50.00% complete, ETA 00:04:09
# Warmup Fork: 1 of 1
# Warmup Iteration   1: SLF4J: A number (39) of logging calls during the initialization phase have been intercepted and are
SLF4J: now being replayed. These are subject to the filtering rules of the underlying logging system.
SLF4J: See also http://www.slf4j.org/codes.html#replay
53.961 ops/s
Iteration   1: 61.120 ops/s
Iteration   2: 63.618 ops/s
Iteration   3: 59.358 ops/s
Iteration   4: 62.805 ops/s
Iteration   5: 62.243 ops/s

# Run progress: 62.50% complete, ETA 00:03:07
# Fork: 1 of 1
# Warmup Iteration   1: SLF4J: A number (39) of logging calls during the initialization phase have been intercepted and are
SLF4J: now being replayed. These are subject to the filtering rules of the underlying logging system.
SLF4J: See also http://www.slf4j.org/codes.html#replay
57.100 ops/s
Iteration   1: 61.640 ops/s
Iteration   2: 60.990 ops/s
Iteration   3: 60.452 ops/s
Iteration   4: 61.009 ops/s
Iteration   5: 58.842 ops/s


Result "org.spr.JMHBenchmarks.ProtoSizedTestBench.benchmarkSizedRequestStreamT10":
  60.587 ±(99.9%) 4.091 ops/s [Average]
  (min, avg, max) = (58.842, 60.587, 61.640), stdev = 1.062
  CI (99.9%): [56.496, 64.677] (assumes normal distribution)


# JMH version: 1.36
# VM version: JDK 17.0.7, Java HotSpot(TM) 64-Bit Server VM, 17.0.7+8-LTS-224
# VM invoker: /Users/prathamkundan/Desktop/bin/java/jdk-17.0.7.jdk/Contents/Home/bin/java
# VM options: -Dfile.encoding=UTF-8 -Duser.country=IN -Duser.language=en -Duser.variant
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 20 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.spr.JMHBenchmarks.ProtoSizedTestBench.benchmarkSizedRequestStreamT20

# Run progress: 75.00% complete, ETA 00:02:05
# Warmup Fork: 1 of 1
# Warmup Iteration   1: SLF4J: A number (39) of logging calls during the initialization phase have been intercepted and are
SLF4J: now being replayed. These are subject to the filtering rules of the underlying logging system.
SLF4J: See also http://www.slf4j.org/codes.html#replay
50.120 ops/s
Iteration   1: 61.557 ops/s
Iteration   2: 63.426 ops/s
Iteration   3: 63.806 ops/s
Iteration   4: 64.165 ops/s
Iteration   5: 64.575 ops/s

# Run progress: 87.50% complete, ETA 00:01:02
# Fork: 1 of 1
# Warmup Iteration   1: SLF4J: A number (39) of logging calls during the initialization phase have been intercepted and are
SLF4J: now being replayed. These are subject to the filtering rules of the underlying logging system.
SLF4J: See also http://www.slf4j.org/codes.html#replay
53.361 ops/s
Iteration   1: 61.291 ops/s
Iteration   2: 61.368 ops/s
Iteration   3: 60.983 ops/s
Iteration   4: 62.175 ops/s
Iteration   5: 64.672 ops/s


Result "org.spr.JMHBenchmarks.ProtoSizedTestBench.benchmarkSizedRequestStreamT20":
  62.098 ±(99.9%) 5.796 ops/s [Average]
  (min, avg, max) = (60.983, 62.098, 64.672), stdev = 1.505
  CI (99.9%): [56.302, 67.894] (assumes normal distribution)


# Run complete. Total time: 00:08:23

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

NOTE: Current JVM experimentally supports Compiler Blackholes, and they are in use. Please exercise
extra caution when trusting the results, look into the generated code to check the benchmark still
works, and factor in a small probability of new VM bugs. Additionally, while comparisons between
different JVMs are already problematic, the performance difference caused by different Blackhole
modes can be very significant. Please make sure you use the consistent Blackhole mode for comparisons.

Benchmark                                                            Mode  Cnt    Score   Error  Units
JMHBenchmarks.ProtoSizedTestBench.benchmarkSizedRequestResponseT10  thrpt    5  156.939 ± 7.658  ops/s
JMHBenchmarks.ProtoSizedTestBench.benchmarkSizedRequestResponseT20  thrpt    5  153.678 ± 3.699  ops/s
JMHBenchmarks.ProtoSizedTestBench.benchmarkSizedRequestStreamT10    thrpt    5   60.587 ± 4.091  ops/s
JMHBenchmarks.ProtoSizedTestBench.benchmarkSizedRequestStreamT20    thrpt    5   62.098 ± 5.796  ops/s

Benchmark result is saved to rsocket-results.csv