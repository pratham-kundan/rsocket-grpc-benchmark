> Task :grpc-client:BenchMarkRunner.main()
# JMH version: 1.36
# VM version: JDK 17.0.7, Java HotSpot(TM) 64-Bit Server VM, 17.0.7+8-LTS-224
# VM invoker: /Users/prathamkundan/Desktop/bin/java/jdk-17.0.7.jdk/Contents/Home/bin/java
# VM options: -Dfile.encoding=UTF-8 -Duser.country=IN -Duser.language=en -Duser.variant
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 10 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.spr.DBTestBench.benchmarkDbGetAllA

# Run progress: 0.00% complete, ETA 00:08:00
# Warmup Fork: 1 of 1
# Warmup Iteration   1: 598.155 ops/s
Iteration   1: 817.318 ops/s
Iteration   2: 829.974 ops/s
Iteration   3: 808.214 ops/s
Iteration   4: 829.525 ops/s
Iteration   5: 825.849 ops/s

# Run progress: 12.50% complete, ETA 00:07:07
# Fork: 1 of 1
# Warmup Iteration   1: 737.473 ops/s
Iteration   1: 840.004 ops/s
Iteration   2: 844.244 ops/s
Iteration   3: 873.715 ops/s
Iteration   4: 882.007 ops/s
Iteration   5: 853.581 ops/s


Result "org.spr.DBTestBench.benchmarkDbGetAllA":
  858.710 ±(99.9%) 70.829 ops/s [Average]
  (min, avg, max) = (840.004, 858.710, 882.007), stdev = 18.394
  CI (99.9%): [787.881, 929.540] (assumes normal distribution)


# JMH version: 1.36
# VM version: JDK 17.0.7, Java HotSpot(TM) 64-Bit Server VM, 17.0.7+8-LTS-224
# VM invoker: /Users/prathamkundan/Desktop/bin/java/jdk-17.0.7.jdk/Contents/Home/bin/java
# VM options: -Dfile.encoding=UTF-8 -Duser.country=IN -Duser.language=en -Duser.variant
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 20 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.spr.DBTestBench.benchmarkDbGetAllB

# Run progress: 25.00% complete, ETA 00:06:06
# Warmup Fork: 1 of 1
# Warmup Iteration   1: 909.366 ops/s
Iteration   1: 1018.774 ops/s
Iteration   2: 1058.451 ops/s
Iteration   3: 1117.515 ops/s
Iteration   4: 1124.780 ops/s
Iteration   5: 1124.591 ops/s

# Run progress: 37.50% complete, ETA 00:05:05
# Fork: 1 of 1
# Warmup Iteration   1: 978.932 ops/s
Iteration   1: 1069.531 ops/s
Iteration   2: 1135.772 ops/s
Iteration   3: 1158.795 ops/s
Iteration   4: 1111.327 ops/s
Iteration   5: 1133.788 ops/s


Result "org.spr.DBTestBench.benchmarkDbGetAllB":
  1121.843 ±(99.9%) 129.859 ops/s [Average]
  (min, avg, max) = (1069.531, 1121.843, 1158.795), stdev = 33.724
  CI (99.9%): [991.984, 1251.702] (assumes normal distribution)


# JMH version: 1.36
# VM version: JDK 17.0.7, Java HotSpot(TM) 64-Bit Server VM, 17.0.7+8-LTS-224
# VM invoker: /Users/prathamkundan/Desktop/bin/java/jdk-17.0.7.jdk/Contents/Home/bin/java
# VM options: -Dfile.encoding=UTF-8 -Duser.country=IN -Duser.language=en -Duser.variant
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 50 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.spr.DBTestBench.benchmarkDbGetAllC

# Run progress: 50.00% complete, ETA 00:04:04
# Warmup Fork: 1 of 1
# Warmup Iteration   1: 855.518 ops/s
Iteration   1: 978.376 ops/s
Iteration   2: 992.486 ops/s
Iteration   3: 944.639 ops/s
Iteration   4: 958.285 ops/s
Iteration   5: 990.678 ops/s

# Run progress: 62.50% complete, ETA 00:03:03
# Fork: 1 of 1
# Warmup Iteration   1: 927.101 ops/s
Iteration   1: 961.571 ops/s
Iteration   2: 964.375 ops/s
Iteration   3: 990.419 ops/s
Iteration   4: 1004.517 ops/s
Iteration   5: 1005.460 ops/s


Result "org.spr.DBTestBench.benchmarkDbGetAllC":
  985.268 ±(99.9%) 81.749 ops/s [Average]
  (min, avg, max) = (961.571, 985.268, 1005.460), stdev = 21.230
  CI (99.9%): [903.520, 1067.017] (assumes normal distribution)


# JMH version: 1.36
# VM version: JDK 17.0.7, Java HotSpot(TM) 64-Bit Server VM, 17.0.7+8-LTS-224
# VM invoker: /Users/prathamkundan/Desktop/bin/java/jdk-17.0.7.jdk/Contents/Home/bin/java
# VM options: -Dfile.encoding=UTF-8 -Duser.country=IN -Duser.language=en -Duser.variant
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 100 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.spr.DBTestBench.benchmarkDbGetAllD

# Run progress: 75.00% complete, ETA 00:02:02
# Warmup Fork: 1 of 1
# Warmup Iteration   1: 664.146 ops/s
Iteration   1: 660.826 ops/s
Iteration   2: 668.990 ops/s
Iteration   3: 697.857 ops/s
Iteration   4: 711.307 ops/s
Iteration   5: 761.404 ops/s

# Run progress: 87.50% complete, ETA 00:01:01
# Fork: 1 of 1
# Warmup Iteration   1: 601.388 ops/s
Iteration   1: 640.136 ops/s
Iteration   2: 664.067 ops/s
Iteration   3: 678.298 ops/s
Iteration   4: 704.975 ops/s
Iteration   5: 749.500 ops/s


Result "org.spr.DBTestBench.benchmarkDbGetAllD":
  687.395 ±(99.9%) 161.388 ops/s [Average]
  (min, avg, max) = (640.136, 687.395, 749.500), stdev = 41.912
  CI (99.9%): [526.007, 848.783] (assumes normal distribution)


# Run complete. Total time: 00:08:14

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

NOTE: Current JVM experimentally supports Compiler Blackholes, and they are in use. Please exercise
extra caution when trusting the results, look into the generated code to check the benchmark still
works, and factor in a small probability of new VM bugs. Additionally, while comparisons between
different JVMs are already problematic, the performance difference caused by different Blackhole
modes can be very significant. Please make sure you use the consistent Blackhole mode for comparisons.

Benchmark                        Mode  Cnt     Score     Error  Units
DBTestBench.benchmarkDbGetAllA  thrpt    5   858.710 ±  70.829  ops/s
DBTestBench.benchmarkDbGetAllB  thrpt    5  1121.843 ± 129.859  ops/s
DBTestBench.benchmarkDbGetAllC  thrpt    5   985.268 ±  81.749  ops/s
DBTestBench.benchmarkDbGetAllD  thrpt    5   687.395 ± 161.388  ops/s

Benchmark result is saved to grpc-db-results.csv
