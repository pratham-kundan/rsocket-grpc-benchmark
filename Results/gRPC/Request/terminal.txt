# JMH version: 1.36
# VM version: JDK 17.0.7, Java HotSpot(TM) 64-Bit Server VM, 17.0.7+8-LTS-224
# VM invoker: /Users/prathamkundan/Desktop/bin/java/jdk-17.0.7.jdk/Contents/Home/bin/java
# VM options: -Dfile.encoding=UTF-8 -Duser.country=IN -Duser.language=en -Duser.variant
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 10 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.spr.TestBench.benchmarkRequestResponseT10

# Run progress: 0.00% complete, ETA 00:08:00
# Warmup Fork: 1 of 1
# Warmup Iteration   1: 13999.116 ops/s
Iteration   1: 20682.555 ops/s
Iteration   2: 21308.341 ops/s
Iteration   3: 21123.319 ops/s
Iteration   4: 20993.410 ops/s
Iteration   5: 20479.629 ops/s

# Run progress: 12.50% complete, ETA 00:07:07
# Fork: 1 of 1
# Warmup Iteration   1: 17464.359 ops/s
Iteration   1: 21394.594 ops/s
Iteration   2: 21317.496 ops/s
Iteration   3: 21816.688 ops/s
Iteration   4: 20942.365 ops/s
Iteration   5: 19996.652 ops/s


Result "org.spr.TestBench.benchmarkRequestResponseT10":
  21093.559 ±(99.9%) 2646.705 ops/s [Average]
  (min, avg, max) = (19996.652, 21093.559, 21816.688), stdev = 687.341
  CI (99.9%): [18446.854, 23740.264] (assumes normal distribution)


# JMH version: 1.36
# VM version: JDK 17.0.7, Java HotSpot(TM) 64-Bit Server VM, 17.0.7+8-LTS-224
# VM invoker: /Users/prathamkundan/Desktop/bin/java/jdk-17.0.7.jdk/Contents/Home/bin/java
# VM options: -Dfile.encoding=UTF-8 -Duser.country=IN -Duser.language=en -Duser.variant
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 20 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.spr.TestBench.benchmarkRequestResponseT20

# Run progress: 25.00% complete, ETA 00:06:06
# Warmup Fork: 1 of 1
# Warmup Iteration   1: 17920.646 ops/s
Iteration   1: 18675.972 ops/s
Iteration   2: 19483.160 ops/s
Iteration   3: 20599.876 ops/s
Iteration   4: 20533.653 ops/s
Iteration   5: 19981.146 ops/s

# Run progress: 37.50% complete, ETA 00:05:05
# Fork: 1 of 1
# Warmup Iteration   1: 16722.437 ops/s
Iteration   1: 20375.238 ops/s
Iteration   2: 20859.914 ops/s
Iteration   3: 19768.533 ops/s
Iteration   4: 18536.954 ops/s
Iteration   5: 18493.492 ops/s


Result "org.spr.TestBench.benchmarkRequestResponseT20":
  19606.826 ±(99.9%) 4116.307 ops/s [Average]
  (min, avg, max) = (18493.492, 19606.826, 20859.914), stdev = 1068.992
  CI (99.9%): [15490.519, 23723.133] (assumes normal distribution)


# JMH version: 1.36
# VM version: JDK 17.0.7, Java HotSpot(TM) 64-Bit Server VM, 17.0.7+8-LTS-224
# VM invoker: /Users/prathamkundan/Desktop/bin/java/jdk-17.0.7.jdk/Contents/Home/bin/java
# VM options: -Dfile.encoding=UTF-8 -Duser.country=IN -Duser.language=en -Duser.variant
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 10 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.spr.TestBench.benchmarkRequestStreamT10

# Run progress: 50.00% complete, ETA 00:04:04
# Warmup Fork: 1 of 1
# Warmup Iteration   1: 1329.742 ops/s
Iteration   1: 1479.232 ops/s
Iteration   2: 1487.994 ops/s
Iteration   3: 1507.227 ops/s
Iteration   4: 1422.907 ops/s
Iteration   5: 1448.591 ops/s

# Run progress: 62.50% complete, ETA 00:03:03
# Fork: 1 of 1
# Warmup Iteration   1: 1426.969 ops/s
Iteration   1: 1468.117 ops/s
Iteration   2: 1428.311 ops/s
Iteration   3: 1482.505 ops/s
Iteration   4: 1521.403 ops/s
Iteration   5: 1551.317 ops/s


Result "org.spr.TestBench.benchmarkRequestStreamT10":
  1490.331 ±(99.9%) 183.522 ops/s [Average]
  (min, avg, max) = (1428.311, 1490.331, 1551.317), stdev = 47.660
  CI (99.9%): [1306.808, 1673.853] (assumes normal distribution)


# JMH version: 1.36
# VM version: JDK 17.0.7, Java HotSpot(TM) 64-Bit Server VM, 17.0.7+8-LTS-224
# VM invoker: /Users/prathamkundan/Desktop/bin/java/jdk-17.0.7.jdk/Contents/Home/bin/java
# VM options: -Dfile.encoding=UTF-8 -Duser.country=IN -Duser.language=en -Duser.variant
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 20 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.spr.TestBench.benchmarkRequestStreamT20

# Run progress: 75.00% complete, ETA 00:02:02
# Warmup Fork: 1 of 1
# Warmup Iteration   1: 1230.820 ops/s
Iteration   1: 1845.325 ops/s
Iteration   2: 1847.708 ops/s
Iteration   3: 1785.935 ops/s
Iteration   4: 1702.643 ops/s
Iteration   5: 1811.286 ops/s

# Run progress: 87.50% complete, ETA 00:01:01
# Fork: 1 of 1
# Warmup Iteration   1: 1340.515 ops/s
Iteration   1: 1762.232 ops/s
Iteration   2: 1736.997 ops/s
Iteration   3: 1709.478 ops/s
Iteration   4: 1741.201 ops/s
Iteration   5: 1814.210 ops/s


Result "org.spr.TestBench.benchmarkRequestStreamT20":
  1752.824 ±(99.9%) 150.633 ops/s [Average]
  (min, avg, max) = (1709.478, 1752.824, 1814.210), stdev = 39.119
  CI (99.9%): [1602.191, 1903.457] (assumes normal distribution)


# Run complete. Total time: 00:08:09

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

NOTE: Current JVM experimentally supports Compiler Blackholes, and they are in use. Please exercise
extra caution when trusting the results, look into the generated code to check the benchmark still
works, and factor in a small probability of new VM bugs. Additionally, while comparisons between
different JVMs are already problematic, the performance difference caused by different Blackhole
modes can be very significant. Please make sure you use the consistent Blackhole mode for comparisons.

Benchmark                               Mode  Cnt      Score      Error  Units
TestBench.benchmarkRequestResponseT10  thrpt    5  21093.559 ± 2646.705  ops/s
TestBench.benchmarkRequestResponseT20  thrpt    5  19606.826 ± 4116.307  ops/s
TestBench.benchmarkRequestStreamT10    thrpt    5   1490.331 ±  183.522  ops/s
TestBench.benchmarkRequestStreamT20    thrpt    5   1752.824 ±  150.633  ops/s

Benchmark result is saved to grpc-db-results.csv